kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: how2die-forward-http-to-https
  namespace: traefik
spec:
  entryPoints:
  - web
  routes:
  - match: HostRegexp(`how2die.com`, `{subdomain:[a-z]+}.how2die.com`)
    kind: Rule
    services:
    - name: traefik-ingress-controller-http-service
      port: 80
    middlewares:
    - name: redirect

---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: traefik-dashboard-ingress
  namespace: traefik
spec:
  entryPoints:
  - web-secure
  routes:
  - match: Host(`traefik.how2die.com`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: traefik-ingress-controller-dashboard-service
      port: 8080
  tls:
    certResolver: default

---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: kubernetes-dashboard-ingress
  namespace: kubernetes-dashboard
spec:
  entryPoints:
  - web-secure
  routes:
  - match: Host(`k8s.how2die.com`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: kubernetes-dashboard
      port: 443
  tls:
    certResolver: default

---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: how2die-website-ingress
  namespace: default
spec:
  entryPoints:
  - web-secure
  routes:
  - match: Host(`how2die.com`, `www.how2die.com`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: website
      port: 80
  - match: Host(`how2die.com`, `www.how2die.com`) && PathPrefix(`/api/messages`)
    kind: Rule
    services:
    - name: message-server
      port: 8080
  - match: Host(`how2die.com`, `www.how2die.com`) && PathPrefix(`/api/users`, `/api/tokens`)
    kind: Rule
    services:
    - name: user-service
      port: 8080
  tls:
    certResolver: default

---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: how2die-sql-ingress
  namespace: default
spec:
  entryPoints:
  - web-secure
  routes:
  - match: Host(`sql.how2die.com`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: adminer
      port: 8080
  tls:
    certResolver: default

---
kind: Middleware
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: redirect
  namespace: traefik
spec:
  redirectScheme:
    scheme: https
